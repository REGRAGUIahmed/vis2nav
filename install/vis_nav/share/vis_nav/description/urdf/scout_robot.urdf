<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from bringup_scout.xacro            | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="scout">
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.4235294117647059 0.0392156862745098 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.8705882352941177 0.8117647058823529 0.7647058823529411 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <!-- Base link -->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/regmed/dregmed/vis_to_nav/src/vis_nav/description/urdf/meshes/mini_base_link.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.008"/>
      <geometry>
        <box size="0.595 0.395 0.13"/>
      </geometry>
    </collision>
  </link>
  <link name="base_footprint"/>
  <joint name="base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 -0.178"/>
    <parent link="base_link"/>
    <child link="base_footprint"/>
  </joint>
  <link name="inertial_link">
    <inertial>
      <mass value="18"/>
      <origin xyz="0.0 0.0 0.0"/>
      <inertia ixx="2.288641" ixy="0" ixz="0" iyy="5.103976" iyz="0" izz="3.431465"/>
    </inertial>
  </link>
  <joint name="inertial_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="inertial_link"/>
  </joint>
  <link name="front_right_wheel_link">
    <inertial>
      <mass value="2"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.1361" iyz="0" izz="0.7171"/>
    </inertial>
    <visual>
      <!-- <origin xyz="0 0 0" rpy="0 0 0" /> -->
      <origin rpy="0 0 3.14" xyz="0.221 0.225 0.0925"/>
      <geometry>
        <mesh filename="file:///home/regmed/dregmed/vis_to_nav/src/vis_nav/description/urdf/meshes/mini_wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0852" radius="0.0875"/>
      </geometry>
    </collision>
  </link>
  <joint name="front_right_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="front_right_wheel_link"/>
    <origin rpy="3.14 0 3.14" xyz="0.226 -0.245 -0.0905"/>
    <axis rpy="0 0 3.14" xyz="0 1 0"/>
  </joint>
  <link name="front_left_wheel_link">
    <inertial>
      <mass value="2"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.1361" iyz="0" izz="0.7171"/>
    </inertial>
    <visual>
      <!-- <origin xyz="0 0 0" rpy="0 0 0" /> -->
      <origin rpy="0 0 0" xyz="-0.221 -0.225 0.0925"/>
      <geometry>
        <mesh filename="file:///home/regmed/dregmed/vis_to_nav/src/vis_nav/description/urdf/meshes/mini_wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0852" radius="0.0875"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="front_right_wheel">
    <material value="Gazebo/Black"/>
  </gazebo>
  <joint name="front_left_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="front_left_wheel_link"/>
    <origin rpy="0 3.14 0" xyz="0.226 0.245 -0.0905"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <link name="rear_left_wheel_link">
    <inertial>
      <mass value="2"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.1361" iyz="0" izz="0.7171"/>
    </inertial>
    <visual>
      <!-- <origin xyz="0 0 0" rpy="0 0 0" /> -->
      <origin rpy="0 0 0" xyz="-0.221 -0.225 0.0925"/>
      <geometry>
        <mesh filename="file:///home/regmed/dregmed/vis_to_nav/src/vis_nav/description/urdf/meshes/mini_wheel.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0852" radius="0.0875"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="front_left_wheel">
    <material value="Gazebo/Black"/>
  </gazebo>
  <joint name="rear_left_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="rear_left_wheel_link"/>
    <origin rpy="0 3.14 0" xyz="-0.226 0.245 -0.0905"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
  </joint>
  <link name="rear_right_wheel_link">
    <inertial>
      <mass value="2"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.7171" ixy="0" ixz="0" iyy="0.1361" iyz="0" izz="0.7171"/>
    </inertial>
    <visual>
      <!-- <origin xyz="0 0 0" rpy="0 0 0" /> -->
      <origin rpy="0 0 3.14" xyz="0.221 0.225 0.0925"/>
      <geometry>
        <mesh filename="file:///home/regmed/dregmed/vis_to_nav/src/vis_nav/description/urdf/meshes/mini_wheel.dae"/>

      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570795 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0852" radius="0.0875"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="rear_left_wheel">
    <material value="Gazebo/Black"/>
  </gazebo>
  
  <joint name="rear_right_wheel" type="continuous">
    <parent link="base_link"/>
    <child link="rear_right_wheel_link"/>
    <origin rpy="3.14 0 3.14" xyz="-0.226 -0.245 -0.0905"/>
    <axis rpy="0 0 3.14" xyz="0 1 0"/>
  </joint>
  <gazebo reference="rear_right_wheel">
    <material value="Gazebo/Black"/>
  </gazebo>
  <!-- This file is a placeholder which is included by default from
       husky.urdf.xacro. If a robot is being customized and requires
       additional URDF, set the HUSKY_URDF_EXTRAS environment variable
       to the full path of the file you would like included. -->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <!-- <ros>
        <remapping>odom:=odom/unfiltered</remapping>
      </ros> -->
      <num_wheel_pairs>2</num_wheel_pairs>
      <left_joint>front_left_wheel</left_joint>
      <right_joint>front_right_wheel</right_joint>
      <left_joint>rear_left_wheel</left_joint>
      <right_joint>rear_right_wheel</right_joint>
      <wheel_separation>0.416503</wheel_separation>
      <wheel_separation>0.416503</wheel_separation>
      <wheel_diameter>3.200e-01</wheel_diameter>
      <wheel_diameter>3.200e-01</wheel_diameter>
      <updateRate>50.0</updateRate>
      <max_wheel_acceleration>0.6</max_wheel_acceleration>
      <robot_base_frame>base_link</robot_base_frame>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
      <odometry_frame>odom</odometry_frame>
    </plugin>
  </gazebo>
  <!-- <gazebo>
    <plugin filename="libgazebo_ros_joint_state_publisher.so" name="joint_state_publisher">
      <robotNamespace>/</robotNamespace>
      <jointName>front_left_wheel, front_right_wheel, rear_left_wheel, rear_right_wheel</jointName>
      <updateRate>50.0</updateRate>
      <alwaysOn>true</alwaysOn>
    </plugin>
  </gazebo> -->
  <joint name="base_link_front_laser_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <origin rpy="0 0 0" xyz="0.125 0 0.1"/>
    <parent link="base_link"/>
    <child link="front_laser"/>
  </joint>
  <link name="front_laser">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
      <mesh filename="file:///home/regmed/dregmed/vis_to_nav/src/vis_nav/description/urdf/meshes/hokuyo.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <gazebo reference="front_laser">
    <sensor name="laser" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <ray>
        <scan>
          <horizontal>
            <!-- The URG-04LX-UG01  has  683 steps with 0.35139 Degree resolution -->
            <resolution>1</resolution>
            <max_angle>2.0944</max_angle>
            <!--2.0944 120 Degree -->
            <min_angle>-2.0944</min_angle>
            <!-- -120 Degree -->
            <samples>360</samples>
            <!--<samples>683</samples>-->
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>7
          <max>10</max>
          <resolution>0.05</resolution>
        </range>
      </ray>
      <!-- <plugin filename="libgazebo_ros_laser.so" name="laser">
        <robotNamespace>/</robotNamespace>
        <topicName>front_laser/scan</topicName>
        <frameName>front_laser</frameName>
      </plugin> -->

      <plugin name='laser' filename='libgazebo_ros_ray_sensor.so'>
            <ros>
                <remapping>~/out:=/front_laser/scan</remapping>
            </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>front_laser</frame_name>
        </plugin>
      <!--
          <plugin name="laser" filename="libRayPlugin.so" />
          -->
      <always_on>1</always_on>
      <update_rate>100</update_rate>
      <visualize>false</visualize>
    </sensor>
  </gazebo>
  <joint name="base_link_cameraD_joint" type="fixed">
    <!-- <axis xyz="0 0 1" /> -->
    <axis xyz="0.19 0 0.075"/>
    <origin rpy="0 0 0" xyz="0.21 0 0.075"/>
    <parent link="base_link"/>
    <child link="cameraD"/>
  </joint>
  <!-- Camera -->
  <link name="cameraD">
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
    <!-- <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.03" length="0.03"/>
      </geometry>
      <material name="grey"/>
    </visual> -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.03" radius="0.03"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="cameraD">
    <material value="Gazebo/Grey"/>
  </gazebo>
  <link name="depth_frame"/>
  <joint name="depth_joint" type="fixed">
    <origin rpy="-1.57 0 -1.57" xyz="0 -0.1 0"/>
    <parent link="cameraD"/>
    <child link="depth_frame"/>
  </joint>
  <gazebo reference="cameraD">
    <material>Gazebo/Red</material>
    <sensor name="camera" type="depth">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <camera>
        <horizontal_fov>1.089</horizontal_fov>
        <image>
          <format>B8G8R8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <frame_name>camera_link_optical</frame_name>
        <min_depth>0.1</min_depth>
        <max_depth>100.0</max_depth>
      </plugin>
    </sensor>
  </gazebo>



  <!-- <gazebo reference="cameraD">
    <sensor name="camera2" type="depth">
      <update_rate>10.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>10</far>
        </clip>
        <noise>
          <type>gaussian</type> -->
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <!-- <mean>0.0</mean>
          <stddev>0.0</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_depth_camera.so" name="camera_plugin">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn> -->
        <!-- Keep this zero, update_rate in the parent <sensor> tag
            will control the frame rate. -->
        <!-- <updateRate>30</updateRate>
        <cameraName>camera_ir</cameraName>
        <robotNamespace>/</robotNamespace> -->
        <!-- <imageTopicName>/camera/rgb/image_raw</imageTopicName>
          <cameraInfoTopicName>/camera/rgb/camera_info</cameraInfoTopicName> -->
        <!-- <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/camera/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
        <frameName>depth_frame</frameName>
        <pointCloudCutoff>0.05</pointCloudCutoff>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin> -->
      <!-- <camera name="__default__">
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>10</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="rgb_camera_plugin" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>30</updateRate>
        <cameraName>camera</cameraName>
        <robotNamespace>/</robotNamespace>
        <imageTopicName>/camera/rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>/camera/rgb/camera_info</cameraInfoTopicName>
        <frameName>${name}</frameName>
        <pointCloudCutoff>0.05</pointCloudCutoff>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin> -->
    <!-- </sensor>
  </gazebo> -->
  <!-- <joint name="base_link_cameraFishEye_joint" type="fixed">
    <axis xyz="0.19 0 0.5"/>
    <origin rpy="0 0 0" xyz="0.21 0 0.5"/>
    <parent link="base_link"/>
    <child link="cameraFishEye"/>
  </joint> -->
  <!-- Camera -->
  <!-- <link name="cameraFishEye">
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial> -->
    <!-- <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.03" length="0.03"/>
      </geometry>
      <material name="grey"/>
    </visual> -->
    <!-- <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.03" radius="0.03"/>
      </geometry>
    </collision>
  </link> -->
  <!-- <gazebo reference="cameraFishEye">
    <material value="Gazebo/Grey"/>
  </gazebo> -->
  <!-- <link name="fisheye_frame"/>
  <joint name="fisheye_joint" type="fixed">
    <origin rpy="-1.57 0 -1.57" xyz="0 0 0"/>
    <parent link="cameraFishEye"/>
    <child link="fisheye_frame"/>
  </joint> -->
  <!-- <gazebo reference="cameraFishEye">
    <sensor name="camera2" type="wideanglecamera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>3.84</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.01</near>
          <far>10</far>
        </clip>
        <lens>
          <type>custom</type>
          <custom_function>
            <c1>3</c1>
            <c2>8</c2>
            <f>1.0</f>
            <fun>tan</fun>
          </custom_function>
          <scale_to_hfov>true</scale_to_hfov>
          <env_texture_size>512</env_texture_size>
        </lens>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_plugin">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>0</updateRate>
        <cameraName>camera_fish</cameraName>
        <imageTopicName>/camera/fisheye/image_raw</imageTopicName>
        <cameraInfoTopicName>/camera/fisheye/camera_info</cameraInfoTopicName>
        <frameName>fisheye_frame</frameName>
        <pointCloudCutoff>0.01</pointCloudCutoff>
        <distortionK1>-0.8</distortionK1>
        <distortionK2>0.12</distortionK2>
        <distortionK3>10</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo> -->
</robot>
